name: Autoâ€‘bump & Publish

on:
  push:
    branches:
      - main

jobs:
  bump-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip poetry toml bump2version twine

      - name: Determine next version
        # This example uses bump2version to bump the patch part
        run: |
          bump2version --allow-dirty --current-version=$(poetry version -s) patch pyproject.toml

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "ci: bump version to $(poetry version -s)"
          git push

      - name: Tag the commit
        run: |
          NEW_VER=$(poetry version -s)
          git tag v$NEW_VER
          git push origin v$NEW_VER

      - name: Build package
        run: |
          poetry install --without dev
          poetry build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*.tar.gz dist/*.whl
